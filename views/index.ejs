<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
 
 <p id="graffa">
 
 

 
 <script src="/d3.v3.min.js" charset="utf-8"></script> 
 <script src="/sankey.js" charset="utf-8"></script>
  
  
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>

  <script>
 
 var svg = d3.select("#graffa").append("svg").attr("width",1200).attr("height",1200);
 
 var g = svg.append("g").attr("transform", 
          "translate(100,100)");
          
          
          
 var sankeke = d3.sankey()
 .nodeWidth(36)
 .nodePadding(40)
 .size([1000,500]);

var path = sankeke.link(); 
 
 var gra = {
"nodes":[
{"node":0,"name":"node0"},
{"node":1,"name":"node1"},
{"node":2,"name":"node2"},
{"node":3,"name":"node3"},
{"node":4,"name":"node4"}
],
"links":[
{"source":0,"target":2,"value":2},
{"source":1,"target":2,"value":2},
{"source":1,"target":3,"value":2},
{"source":0,"target":4,"value":2},
{"source":2,"target":3,"value":2},
{"source":2,"target":4,"value":2},
{"source":3,"target":4,"value":4}
]};
         
 sankeke.nodes(gra.nodes).links(gra.links).layout(32);
 
 var link = g.append("g").selectAll(".link")
      .data(gra.links)
      .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      //.style("stroke-width", 10)
      .sort(function(a, b) { return b.dy - a.dy; });

 // .style("stroke-width", function(d) { return Math.max(1, d.dy); })
 
   var node = g.append("g").selectAll(".node")
      .data(gra.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { 
          return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { 
          this.parentNode.appendChild(this); })
      .on("drag", dragmove)); 

// add the rectangles for the nodes
  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankeke.nodeWidth())
      .style("fill", function(d) { 
          return "black";}) //color(d.name.replace(/ .*/, "")); })
      .style("stroke", function(d) { 
          return "black";}) //d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { 
         return "keke";}); // return d.name + "\n" + format(d.value); });
         
         // the function for moving the nodes
  function dragmove(d) {
    d3.select(this).attr("transform", 
        "translate(" + (
            d.x = Math.max(0, Math.min(1000 - d.dx, d3.event.x))
        )
        + "," + (
            d.y = Math.max(0, Math.min(500 - d.dy, d3.event.y))
        ) + ")");
    sankeke.relayout();
    link.attr("d", path);
  }
 
 
  var jsonCustomers = [
   { "year": 2010, "solo_b_count": 30, "solo_m_count": 20, "dobbio_count": 10 },
   { "year": 2011, "solo_b_count": 10, "solo_m_count": 15, "dobbio_count": 12 },
   { "year": 2012, "solo_b_count": 40, "solo_m_count": 30, "dobbio_count": 15 },
   { "year": 2013, "solo_b_count": 50, "solo_m_count": 35, "dobbio_count": 18 }];

/*

   { "x_axis": 70, "y_axis": 70, "radius": 20, "color" : "purple"},
   { "x_axis": 110, "y_axis": 100, "radius": 20, "color" : "red"}];
 */


var b_baseline = 300;
var d_baseline = 500;
var m_baseline = 700;

 
 
var svgContainer = d3.select("body").append("svg")
                                     .attr("width", 1200)
                                     .attr("height", 1200);

var b_group = svgContainer.append("g")
					.attr("id", "b")
					.attr("transform","translate(0,1200) scale(1,-1)");

 
var rects_b = b_group.selectAll("rect")
                          .data(jsonCustomers)
                          .enter()
                          .append("rect");



var circleAttributes = rects_b
                    .attr("x", function (d) { return (d.year-2009)*55; })
                	.attr("y", function (d) { return 300 - d.solo_b_count*5/2; })
                	.attr("width", function (d) { return 50; })
                	.attr("height", function (d) { return d.solo_b_count*5; })
					.style("fill", function(d) { return "purple"; });


////

var m_group = svgContainer.append("g")
					.attr("id", "m")
					.attr("transform","translate(0,1200) scale(1,-1)");

var rects_m = m_group.selectAll("rect")
                          .data(jsonCustomers)
                          .enter()
                          .append("rect");



var circleAttributes = rects_m
                    .attr("x", function (d) { return (d.year-2009)*55; })
                	.attr("y", function (d) { return 700 - d.solo_m_count*5/2; })
                	.attr("width", function (d) { return 50; })
                	.attr("height", function (d) { return d.solo_m_count*5; })
					.style("fill", function(d) { return "red"; });






////

var d_group = svgContainer.append("g")
					.attr("id", "d")
					.attr("transform","translate(0,1200) scale(1,-1)");

var rects_d = d_group.selectAll("rect")
                          .data(jsonCustomers)
                          .enter()
                          .append("rect");



var circleAttributes = rects_d
                    .attr("x", function (d) { return (d.year-2009)*55; })
                	.attr("y", function (d) { return 500 - d.dobbio_count*5/2; })
                	.attr("width", function (d) { return 50; })
                	.attr("height", function (d) { return d.dobbio_count*5; })
					.style("fill", function(d) { return "blue"; });



  </script>



  </body>
</html>